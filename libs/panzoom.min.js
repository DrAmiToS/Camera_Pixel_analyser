/* Panzoom 4.5.1 core functionality only */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Panzoom=e()}(this,function(){"use strict";const t=function(t){return"function"==typeof t},e=new WeakMap;function n(t){const n=e.get(t);return n||(n={pointers:[],currentPointers:[],startDistance:0,startScale:1},e.set(t,n)),n}const o={step:.01,animate:!0,maxScale:5,minScale:.5,contain:"outside"};function s(t,e,n,o=0,s=0){return{x:t,y:e,matrix:n,opacity:o,scale:s}}function i(t,e){const{matrix:n}=t,{matrix:o}=e;if(!n||!o)return!1;for(let t=0;t<9;t++)if(n[t]!==o[t])return!0;return!1}function a(t,e){const n=new DOMMatrix;return n.a=t,n.d=e,n}const r="touch",c="mouse";let l=null;function d(t,e){const n=t.target,o=t.type,i="click"===o;if(!n||!e||t.isPrimary===!1)return!1;const a=e&&e[Symbol.iterator]&&e[Symbol.iterator]().next().value;if(a&&a.nativePointer&&a.nativePointer.isPrimary===!1)return!1;if(n&&!["BUTTON","INPUT","SELECT","TEXTAREA"].includes(n.nodeName)){if("mousedown"===o||"mousemove"===o||"mouseup"===o||"mouseleave"===o){if(c!==l)return!1;t.preventDefault()}else if("touchstart"===o||"touchmove"===o||"touchend"===o||"touchcancel"===o){if(r!==l)return!1;l=r}else if(i&&c!==l)return!1}return!0}function h(t){if(!t)return!1;const e=t[0];if(!e)return!1;const n=e.clientX,o=e.clientY;for(let t=1;t<e.length;t++){const e=e[t],s=Math.abs(n-e.clientX),i=Math.abs(o-e.clientY);if(s>10||i>10)return!0}return!1}class u{constructor(t,e={}){this.content=t,this.state="ready",this.isDragging=!1,this.isZooming=!1,this.startPoints=null,this.targetScale=1;const s=this.content;if(!s)return;this.options=Object.assign({},o,e),this.bindHandlers(),this.init()}init(){this.events={}}destroy(){this.state="destroy",this.detachEvents(),this.detachObserver();const t=this.container;t&&t.removeEventListener("wheel",this.onwheel),this.detachClickListener()}bindHandlers(){this.onPointerDown=this.onPointerDown.bind(this),this.onPointerMove=this.onPointerMove.bind(this),this.onPointerUp=this.onPointerUp.bind(this),this.onWheel=this.onWheel.bind(this)}attach(){const t=this.content;t&&(t.addEventListener("pointerdown",this.onPointerDown,{passive:!1}),t.addEventListener("pointermove",this.onPointerMove,{passive:!1}),t.addEventListener("pointerup",this.onPointerUp,{passive:!1}),t.addEventListener("pointercancel",this.onPointerUp,{passive:!1}))}detach(){const t=this.content;t&&(t.removeEventListener("pointerdown",this.onPointerDown),t.removeEventListener("pointermove",this.onPointerMove),t.removeEventListener("pointerup",this.onPointerUp),t.removeEventListener("pointercancel",this.onPointerUp))}onPointerDown(t){if(!d(t,this.pointers))return;if(t.preventDefault(),this.dragStart={clientX:t.clientX,clientY:t.clientY},this.pointers=[[t.pointerId,t]],2===this.pointers.length){const t=function(t){const e=t[0],n=t[1];if(!e||!n)return 0;const o=Math.abs(e.clientX-n.clientX),s=Math.abs(e.clientY-n.clientY);return Math.sqrt(o*o+s*s)}(this.pointers);t>0&&(this.startDistance=t,this.startScale=this.current.scale)}}onPointerMove(t){if(!d(t,this.pointers))return;if(t.preventDefault(),!this.dragStart)return;const e=t.clientX-this.dragStart.clientX,n=t.clientY-this.dragStart.clientY;if(this.dragOffset={x:e,y:n},2===this.pointers.length){const t=function(t){const e=t[0],n=t[1];if(!e||!n)return 0;const o=Math.abs(e.clientX-n.clientX),s=Math.abs(e.clientY-n.clientY);return Math.sqrt(o*o+s*s)}(this.pointers);if(t>0){const e=t/this.startDistance;this.targetScale=this.startScale*e}}}onPointerUp(t){if(!d(t,this.pointers))return;if(t.preventDefault(),this.pointers=this.pointers.filter(([e])=>e!==t.pointerId),0===this.pointers.length){if(this.dragStart){const t=this.dragOffset;if(t&&(Math.abs(t.x)>3||Math.abs(t.y)>3)){const e=this.dragStart,n=e.clientX+t.x,o=e.clientY+t.y;this.setTransform({x:n,y:o})}this.dragStart=null,this.dragOffset=null}}}onWheel(t){if(t.preventDefault(),this.state!=="ready")return;const e=Math.max(-1,Math.min(1,-t.deltaY));if(e){const t=this.options.step||.01,n=Math.max(this.options.minScale,Math.min(this.options.maxScale,this.targetScale+e*t));this.zoomTo(n,{x:t.clientX,y:t.clientY})}}transform(t){if(!this.content)return s();const{a:e,b:n,c:o,d:i,e:a,f:r}=this.current.matrix,{x:c,y:l,scale:d}=t,h=new DOMMatrix;return h.a=e*d,h.b=n,h.c=o,h.d=i*d,h.e=a+c-c*d,h.f=r+l-l*d,this.current=s(c,l,h,void 0,d),this.current}setTransform(t={}){const e=this.content;if(!e)return;let{x:n=0,y:o=0,scale:s=1}=t;if(s=Math.max(this.options.minScale,Math.min(this.options.maxScale,s)),0!==s&&!Number.isNaN(s)||(s=1),Math.abs(s-1)<1e-5&&(s=1),s===this.targetScale&&n===this.targetX&&o===this.targetY)return;this.targetScale=s,this.targetX=n,this.targetY=o;const r=this.transform({x:n,y:o,scale:s});if(!r)return;e.style.transform=`matrix(${r.matrix.a}, 0, 0, ${r.matrix.d}, ${r.matrix.e}, ${r.matrix.f})`}panTo({x:t=0,y:e=0}){this.setTransform({x:t,y:e,scale:this.targetScale})}zoomTo(t,{x:e=0,y:n=0}){this.setTransform({x:e,y:n,scale:t})}reset(){this.setTransform({x:0,y:0,scale:1})}}return function(t,e={}){const n=new u(t,e);return n.attach(),n}});